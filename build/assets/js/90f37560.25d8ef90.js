(self.webpackChunkopentezos=self.webpackChunkopentezos||[]).push([[4690],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,f=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9443:function(e,t,n){"use strict";var a=(0,n(7294).createContext)(void 0);t.Z=a},944:function(e,t,n){"use strict";var a=n(7294),r=n(9443);t.Z=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},7705:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var a=n(7294),r="root_2W3B",o=function(e){var t=e.children;return a.createElement("div",{className:r},t)}},1770:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return b},frontMatter:function(){return h},metadata:function(){return v},toc:function(){return y}});var a=n(2122),r=n(9756),o=n(7294),i=n(3905),s=n(944),l=n(6010),c="tabItem_1uMI",u="tabItemActive_2DSg";var m=37,p=39;var d=function(e){var t=e.lazy,n=e.block,a=e.defaultValue,r=e.values,i=e.groupId,d=e.className,f=(0,s.Z)(),g=f.tabGroupChoices,h=f.setTabGroupChoices,v=(0,o.useState)(a),y=v[0],k=v[1],b=o.Children.toArray(e.children),w=[];if(null!=i){var O=g[i];null!=O&&O!==y&&r.some((function(e){return e.value===O}))&&k(O)}var I=function(e){var t=e.currentTarget,n=w.indexOf(t),a=r[n].value;k(a),null!=i&&(h(i,a),setTimeout((function(){var e,n,a,r,o,i,s,l;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,o=e.right,i=window,s=i.innerHeight,l=i.innerWidth,n>=0&&o<=l&&r<=s&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(u),setTimeout((function(){return t.classList.remove(u)}),2e3))}),150))},N=function(e){var t,n;switch(e.keyCode){case p:var a=w.indexOf(e.target)+1;n=w[a]||w[0];break;case m:var r=w.indexOf(e.target)-1;n=w[r]||w[w.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},d)},r.map((function(e){var t=e.value,n=e.label;return o.createElement("li",{role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,className:(0,l.Z)("tabs__item",c,{"tabs__item--active":y===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:N,onFocus:I,onClick:I},n)}))),t?(0,o.cloneElement)(b.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},b.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==y})}))))};var f=function(e){var t=e.children,n=e.hidden,a=e.className;return o.createElement("div",{role:"tabpanel",hidden:n,className:a},t)},g=n(7705),h={id:"introduction",title:"Introduction",slug:"/ligo",authors:"Maxime Sallerin, Benjamin Pilia and Frank Hillard"},v={unversionedId:"ligo/introduction",id:"ligo/introduction",isDocsHomePage:!1,title:"Introduction",description:"Tezos smart contracts are written in Michelson, which is a stack-based language and the lowest level of language for a Tezos smart contract. The Michelson code can be deployed as-is on the Tezos network.",source:"@site/docs/ligo/introduction.md",sourceDirName:"ligo",slug:"/ligo",permalink:"/ligo",editUrl:"https://github.com/octo-technology/OpenTezos/tree/main/docs/ligo/introduction.md",version:"current",lastUpdatedBy:"frankhillard",lastUpdatedAt:1623846789,formattedLastUpdatedAt:"6/16/2021",frontMatter:{id:"introduction",title:"Introduction",slug:"/ligo",authors:"Maxime Sallerin, Benjamin Pilia and Frank Hillard"},sidebar:"docs",previous:{title:"Exam",permalink:"/smartpy/exam"},next:{title:"Installation",permalink:"/ligo/installation"}},y=[{value:"What&#39;s next",id:"whats-next",children:[]}],k={toc:y};function b(e){var t=e.components,o=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},k,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Tezos smart contracts are written in ",(0,i.kt)("a",{parentName:"p",href:"https://opentezos.com/michelson"},"Michelson"),", which is a stack-based language and the lowest level of language for a Tezos smart contract. The Michelson code can be deployed as-is on the Tezos network."),(0,i.kt)("p",null,"However, if reading or writing Michelson code is still easy for small smart contracts, it can become tedious for more complex smart contracts, as:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"there are no variables and functions are not easy to use"),(0,i.kt)("li",{parentName:"ul"},"there is syntactic sugar to combine multiple instructions but stack manipulation remains painful"),(0,i.kt)("li",{parentName:"ul"},"the Michelson code cannot be broken down into several files"),(0,i.kt)("li",{parentName:"ul"},"stack-based languages are not commonly used when it comes to web development")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"LIGO solves these issues.")),(0,i.kt)("p",null,"It is a high-level language for smart contract development.\nSmart contracts can be written in Ligo, then compiled into a single Michelson code file.\nThis Michelson file becomes the smart contract that will be deployed on a Tezos network."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(8157).Z})),(0,i.kt)("small",{className:"figure"},"FIGURE 1: Contextualization of LIGO in the Tezos ecosystem"),(0,i.kt)("p",null,"LIGO currently offers four ",(0,i.kt)("em",{parentName:"p"},"flavours")," of syntaxes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"PascaLIGO"),", a syntax inspired by the Pascal language, provides an imperative developer experience.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"CameLIGO"),", a syntax inspired from ",(0,i.kt)("a",{parentName:"p",href:"https://ocaml.org/"},"OCaml"),", that allows to write in a functional style.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"ReasonLIGO"),", a syntax inspired from ",(0,i.kt)("a",{parentName:"p",href:"https://reasonml.github.io/"},"ReasonML"),", that builds on the strong points of OCaml but still aims to be familiar JavaScript developers.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"JsLIGO"),", the latest syntax released, inspired by the popular JavaScript language."))),(0,i.kt)(g.Z,{mdxType:"NotificationBar"},(0,i.kt)("p",null,(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Imperative programming")," is a programming paradigm that describes the operations in sequences of instructions executed by the computer to change the program's state.\n",(0,i.kt)("strong",{parentName:"p"},"Functional programming")," is a declarative programming paradigm that considers computation as an evaluation of mathematical functions."))),(0,i.kt)("p",null,"Here is an example of a ",(0,i.kt)("em",{parentName:"p"},"Counter")," contract that handles a single integer ",(0,i.kt)("inlineCode",{parentName:"p"},"counter")," value as storage and allows users to increment, decrement or reset this counter."),(0,i.kt)(d,{defaultValue:"pascaligo",values:[{label:"PascaLIGO",value:"pascaligo"},{label:"CameLIGO",value:"cameligo"},{label:"ReasonLIGO",value:"reasonligo"},{label:"JsLIGO",value:"jsligo"}],mdxType:"Tabs"},(0,i.kt)(f,{value:"pascaligo",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"type storage is int\n\ntype parameter is\n  Increment of int\n| Decrement of int\n| Reset\n\ntype return is list (operation) * storage\n\nfunction main (const action : parameter; const store : storage) : return is\n ((nil : list (operation)),\n  case action of\n    Increment (n) -> store + n\n  | Decrement (n) -> store - n\n  | Reset         -> 0\n end)\n"))),(0,i.kt)(f,{value:"cameligo",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"type storage = int\n\ntype parameter =\n  Increment of int\n| Decrement of int\n| Reset\n\ntype return = operation list * storage\n\nlet main (action, store : parameter * storage) : return =\n  ([] : operation list),\n  (match action with\n     Increment n -> store + n\n   | Decrement n -> store - n\n   | Reset       -> 0)\n"))),(0,i.kt)(f,{value:"reasonligo",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"type storage = int;\n\ntype parameter =\n  Increment (int)\n| Decrement (int)\n| Reset;\n\ntype return = (list (operation), storage);\n\nlet main = ((action, store): (parameter, storage)) : return => {\n  (([] : list (operation)),\n  (switch (action) {\n   | Increment (n) => store + n\n   | Decrement (n) => store - n\n   | Reset         => 0}));\n};\n"))),(0,i.kt)(f,{value:"jsligo",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'type storage = int;\n\ntype parameter =\n  ["Increment", int]\n| ["Decrement", int]\n| ["Reset"];\n\ntype return_ = [list<operation>, storage];\n\nlet main = ([action, store]: [parameter, storage]) : return_ => {\n  return [\n    list([]) as list<operation>,\n    match(action, {\n      Increment: (n: int) => store + n,\n      Decrement: (n: int) => store - n,\n      Reset:     ()       => 0\n    })\n  ];\n};\n')))),(0,i.kt)("h2",{id:"whats-next"},"What's next"),(0,i.kt)("p",null,"In the following chapter, we will develop smart contracts in LIGO, compile them and deploy them."),(0,i.kt)("p",null,"We chose to write this module in PascaLIGO. The main difference between the syntaxes is that PascaLIGO is more imperative while ReasonLIGO and CameLIGO are more functional.\nMoreover, 'for' and 'while' loops are only implemented in PascalIGO, which is why we chose it for this module."),(0,i.kt)("p",null,"This module aims to teach developers the basics of LIGO by providing them with the essential skills to write and deploy their first smart contract onto the Tezos network. It will include the basics of the LIGO language, inspired from the ",(0,i.kt)("a",{parentName:"p",href:"https://ligolang.org/docs/language-basics/types"},"official LIGO documentation"),", as well as detailed smart contract examples and a final exam to check your understanding."))}b.isMDXComponent=!0},6010:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})},8157:function(e,t,n){"use strict";t.Z=n.p+"assets/images/intro_schema-93d62e83c79e9504eec5950fc06cf889.svg"}}]);