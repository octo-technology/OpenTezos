(self.webpackChunkopentezos=self.webpackChunkopentezos||[]).push([[2138],{3933:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var a=n(7294),r={button:"button_2UxY"},o=function(e){var t=e.children;return a.createElement("div",{className:r.root},t)}},5164:function(e,t,n){"use strict";n.d(t,{Z:function(){return i}});var a=n(3552),r=n(8227),o=n(7294),i=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={userName:"",sucess:void 0},n}(0,a.Z)(t,e);var n=t.prototype;return n.handleSubmit=function(e){var t=this;e.preventDefault();var n=0,a=0;if(this.props.children.forEach((function(e){"ExamCheckbox"===e.props.mdxType&&(n+=1,"true"===e.props.isCorrect!=!!t.state[e.props.name]&&(a+=1))})),parseInt(a/n*100)<=10){var o=new r.jsPDF({orientation:"landscape",unit:"px",format:[1100,800]});o.addImage("/certif/certificate.jpg","JPEG",0,0,1100,800),o.setFontSize(50),o.text(this.state.userName||"",550,440,{align:"center"}),o.text(this.props.moduleName||"",550,600,{align:"center"}),o.save("Certificate"+this.props.moduleName+".pdf"),this.setState({success:!0})}else this.setState({success:!1})},n.handleChange=function(e){var t;e.preventDefault();var n=e.target,a="checkbox"===n.type?n.checked:n.value,r=n.name;this.setState(((t={})[r]=a,t))},n.handleNameChange=function(e){e.preventDefault(),this.setState({userName:e.target.value})},n.render=function(){var e=this;return o.createElement("form",{onSubmit:function(t){return e.handleSubmit(t)}},this.props.children.map((function(t){return t.props&&"ExamCheckbox"===t.props.mdxType?o.createElement("div",{key:t.props.name},o.createElement("label",null,o.createElement("input",{className:"exam-checkbox",name:t.props.name,type:"checkbox",checked:!!e.state[t.props.name],onChange:function(t){return e.handleChange(t)}}),t.props.children),o.createElement("br",null)):t.props&&"h3"===t.props.mdxType?o.createElement("div",{key:t.props.children},o.createElement("br",null),o.createElement("br",null),t):t})),o.createElement("br",null),o.createElement("br",null),this.state.success?o.createElement("div",{className:"green"},"Congrats, your pdf certificate has been sent!"):o.createElement("div",null,!1===this.state.success&&o.createElement("div",{className:"red"},"Sorry, you made too many mistakes, please try again."),o.createElement("label",null,"Your name:",o.createElement("input",{type:"text",value:this.state.name,onChange:function(t){return e.handleNameChange(t)},className:"exam-name"})),o.createElement("input",{type:"submit",value:"Submit",className:"exam-submit"})))},t}(o.Component)},6725:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},metadata:function(){return m},toc:function(){return l},default:function(){return p}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i=n(5164),s=n(3933),c={id:"exam",title:"Exam",authors:"Maxime Sallerin, Benjamin Pilia and Frank Hillard"},m={unversionedId:"ligo/exam",id:"ligo/exam",isDocsHomePage:!1,title:"Exam",description:"Question 1",source:"@site/docs/ligo/exam.md",sourceDirName:"ligo",slug:"/ligo/exam",permalink:"/ligo/exam",editUrl:"https://github.com/octo-technology/OpenTezos/tree/main/docs/ligo/exam.md",version:"current",lastUpdatedBy:"frankhillard",lastUpdatedAt:1623846789,formattedLastUpdatedAt:"6/16/2021",frontMatter:{id:"exam",title:"Exam",authors:"Maxime Sallerin, Benjamin Pilia and Frank Hillard"},sidebar:"docs",previous:{title:"Examples",permalink:"/ligo/examples"},next:{title:"Take Away",permalink:"/ligo/take-away"}},l=[{value:"Question 1",id:"question-1",children:[]},{value:"Question 2",id:"question-2",children:[]},{value:"Question 3",id:"question-3",children:[]},{value:"Question 4",id:"question-4",children:[]},{value:"Question 5",id:"question-5",children:[]},{value:"Question 6",id:"question-6",children:[]},{value:"Question 7",id:"question-7",children:[]},{value:"Question 8",id:"question-8",children:[]},{value:"Question 9",id:"question-9",children:[]},{value:"Question 10",id:"question-10",children:[]}],u={toc:l};function p(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(i.Z,{moduleName:"DeFi",mdxType:"ExamForm"},(0,o.kt)("h3",{id:"question-1"},"Question 1"),(0,o.kt)("p",null,"What is correct about LIGO?"),(0,o.kt)(s.Z,{name:"00",isCorrect:"true",mdxType:"ExamCheckbox"},"LIGO is a programming language for writing Tezos smart contracts."),(0,o.kt)(s.Z,{name:"01",isCorrect:"false",mdxType:"ExamCheckbox"},"Smart contracts are, by default, written in the LIGO language."),(0,o.kt)(s.Z,{name:"02",isCorrect:"true",mdxType:"ExamCheckbox"},"LIGO compiles scripts written in a high-level language into Michelson script."),(0,o.kt)(s.Z,{name:"03",isCorrect:"false",mdxType:"ExamCheckbox"},"The LIGO syntax is PascaLigo."),(0,o.kt)("h3",{id:"question-2"},"Question 2"),(0,o.kt)("p",null,"What notions are defined inside the smart contract?"),(0,o.kt)(s.Z,{name:"10",isCorrect:"true",mdxType:"ExamCheckbox"},"The type-definition of the storage."),(0,o.kt)(s.Z,{name:"11",isCorrect:"false",mdxType:"ExamCheckbox"},"The balance on the contract."),(0,o.kt)(s.Z,{name:"12",isCorrect:"false",mdxType:"ExamCheckbox"},"The initial value of the storage."),(0,o.kt)(s.Z,{name:"13",isCorrect:"false",mdxType:"ExamCheckbox"},"The value of the entry point and its related parameters."),(0,o.kt)(s.Z,{name:"14",isCorrect:"true",mdxType:"ExamCheckbox"},"The type definition of the entry point."),(0,o.kt)(s.Z,{name:"15",isCorrect:"false",mdxType:"ExamCheckbox"},"The size of the storage."),(0,o.kt)(s.Z,{name:"16",isCorrect:"true",mdxType:"ExamCheckbox"},"The code of the smart contract."),(0,o.kt)(s.Z,{name:"17",isCorrect:"false",mdxType:"ExamCheckbox"},"The list of users allowed to call the smart contract."),(0,o.kt)("h3",{id:"question-3"},"Question 3"),(0,o.kt)("p",null,"What is returned by the execution of a smart contract?"),(0,o.kt)(s.Z,{name:"20",isCorrect:"true",mdxType:"ExamCheckbox"},"The modified storage state after invoking the smart contract."),(0,o.kt)(s.Z,{name:"21",isCorrect:"false",mdxType:"ExamCheckbox"},"The entry point that has been called (and its related parameters)."),(0,o.kt)(s.Z,{name:"22",isCorrect:"true",mdxType:"ExamCheckbox"},"The list of emitted operations produced by the execution of the smart contract."),(0,o.kt)(s.Z,{name:"23",isCorrect:"false",mdxType:"ExamCheckbox"},"The balance of the contract."),(0,o.kt)(s.Z,{name:"24",isCorrect:"false",mdxType:"ExamCheckbox"},"The size of the storage."),(0,o.kt)(s.Z,{name:"25",isCorrect:"false",mdxType:"ExamCheckbox"},"The code of the smart contract."),(0,o.kt)(s.Z,{name:"26",isCorrect:"false",mdxType:"ExamCheckbox"},"The list of users allowed to call the smart contract."),(0,o.kt)("h3",{id:"question-4"},"Question 4"),(0,o.kt)("p",null,"What is the right way to define a variable?"),(0,o.kt)(s.Z,{name:"30",isCorrect:"false",mdxType:"ExamCheckbox"},"`var int : my_age = 25`"),(0,o.kt)(s.Z,{name:"31",isCorrect:"false",mdxType:"ExamCheckbox"},"`int my_age = 25`"),(0,o.kt)(s.Z,{name:"32",isCorrect:"false",mdxType:"ExamCheckbox"},"`var int = my_age : 25`"),(0,o.kt)(s.Z,{name:"33",isCorrect:"false",mdxType:"ExamCheckbox"},"`var my_age : int = 25`"),(0,o.kt)(s.Z,{name:"34",isCorrect:"true",mdxType:"ExamCheckbox"},"`var my_age : int := 25`"),(0,o.kt)(s.Z,{name:"35",isCorrect:"false",mdxType:"ExamCheckbox"},"`var my_age = 25 : int`"),(0,o.kt)("h3",{id:"question-5"},"Question 5"),(0,o.kt)("p",null,"What is the right way to define a constant?"),(0,o.kt)(s.Z,{name:"40",isCorrect:"false",mdxType:"ExamCheckbox"},'`const string : my_name = "Roger"`'),(0,o.kt)(s.Z,{name:"41",isCorrect:"false",mdxType:"ExamCheckbox"},'`string my_age = "Roger"`'),(0,o.kt)(s.Z,{name:"42",isCorrect:"false",mdxType:"ExamCheckbox"},'`const string = my_name : "Roger"`'),(0,o.kt)(s.Z,{name:"43",isCorrect:"true",mdxType:"ExamCheckbox"},'`const my_name : string = "Roger"`'),(0,o.kt)(s.Z,{name:"44",isCorrect:"false",mdxType:"ExamCheckbox"},'`const my_name : string := "Roger"`'),(0,o.kt)(s.Z,{name:"45",isCorrect:"false",mdxType:"ExamCheckbox"},'`const my_name = "Roger" : string`'),(0,o.kt)("h3",{id:"question-6"},"Question 6"),(0,o.kt)("p",null,"Which of the following operations are correct?"),(0,o.kt)(s.Z,{name:"50",isCorrect:"true",mdxType:"ExamCheckbox"},"`const a : int = 5 + 10`"),(0,o.kt)(s.Z,{name:"51",isCorrect:"true",mdxType:"ExamCheckbox"},"`const c : tez = 5mutez + 0.000_010tez`"),(0,o.kt)(s.Z,{name:"52",isCorrect:"false",mdxType:"ExamCheckbox"},"`const c : nat = 5n - 2n`"),(0,o.kt)(s.Z,{name:"53",isCorrect:"true",mdxType:"ExamCheckbox"},"`const b : int = 5n + 10`"),(0,o.kt)(s.Z,{name:"54",isCorrect:"false",mdxType:"ExamCheckbox"},"`const d : tez = 5mutez + 10n`"),(0,o.kt)(s.Z,{name:"55",isCorrect:"true",mdxType:"ExamCheckbox"},"`const b : int = 5n - 2n`"),(0,o.kt)(s.Z,{name:"56",isCorrect:"true",mdxType:"ExamCheckbox"},"`const d : tez = 5mutez - 1mutez`"),(0,o.kt)("h3",{id:"question-7"},"Question 7"),(0,o.kt)("p",null,"What is correct about type aliasing?"),(0,o.kt)(s.Z,{name:"60",isCorrect:"true",mdxType:"ExamCheckbox"},"Type aliasing consists of naming a given type when the context calls for a more precise name."),(0,o.kt)(s.Z,{name:"61",isCorrect:"true",mdxType:"ExamCheckbox"},"Type aliasing increases the readability and maintainability of your smart contracts."),(0,o.kt)(s.Z,{name:"62",isCorrect:"false",mdxType:"ExamCheckbox"},"`type name = string` is the correct way to define a type."),(0,o.kt)(s.Z,{name:"63",isCorrect:"true",mdxType:"ExamCheckbox"},"`type name is string` is the correct way to define a type."),(0,o.kt)("h3",{id:"question-8"},"Question 8"),(0,o.kt)("p",null,"What is a set?"),(0,o.kt)(s.Z,{name:"70",isCorrect:"false",mdxType:"ExamCheckbox"},"A linear collection of elements of the same type."),(0,o.kt)(s.Z,{name:"71",isCorrect:"false",mdxType:"ExamCheckbox"},"A data structure that associates values of the same type to values of the same type."),(0,o.kt)(s.Z,{name:"72",isCorrect:"true",mdxType:"ExamCheckbox"},"An unordered collection of values of the same type."),(0,o.kt)(s.Z,{name:"73",isCorrect:"false",mdxType:"ExamCheckbox"},"One way that data of different types can be packed into a single type, which is made of a field name and a field type."),(0,o.kt)("h3",{id:"question-9"},"Question 9"),(0,o.kt)("p",null,"What is a record?"),(0,o.kt)(s.Z,{name:"80",isCorrect:"false",mdxType:"ExamCheckbox"},"A linear collection of elements of the same type."),(0,o.kt)(s.Z,{name:"81",isCorrect:"false",mdxType:"ExamCheckbox"},"A data structure that associates values of the same type to values of the same type."),(0,o.kt)(s.Z,{name:"82",isCorrect:"false",mdxType:"ExamCheckbox"},"An unordered collection of values of the same type."),(0,o.kt)(s.Z,{name:"83",isCorrect:"true",mdxType:"ExamCheckbox"},"One-way that data of different types can be packed into a single type, which is made of a field name and a field type."),(0,o.kt)("h3",{id:"question-10"},"Question 10"),(0,o.kt)("p",null,"Consider the following smart contract."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"type counterStorage is int\n\ntype counterEntrypoints is Increment of int | Decrement of int\n\ntype counterReturn is ########\n\nfunction increment(const param : int; const s : counterStorage) : counterReturn is \nblock { skip } with ((nil: list(operation)), s + param)\n\nfunction decrement(const param : int; const s : counterStorage) : counterReturn is \nblock { skip } with ((nil: list(operation)), s - param)\n\nfunction main(const ep : counterEntrypoints; const store : counterStorage) : counterReturn is\nblock { \n    const ret : counterReturn = case ep of \n    | Increment(p) -> increment(p, store)\n    | Decrement(p) -> decrement(p, store)\n    end;\n    \n } with ret\n")),(0,o.kt)("p",null,"Complete the ######## part in the code to give the return type of the main function a correct definition.\n(More than one answers can be considered valid)"),(0,o.kt)(s.Z,{name:"90",isCorrect:"false",mdxType:"ExamCheckbox"},"`type counterReturn is list(operation) * counterEntrypoints`"),(0,o.kt)(s.Z,{name:"91",isCorrect:"false",mdxType:"ExamCheckbox"},"`type counterReturn is counterEntrypoints * counterStorage`"),(0,o.kt)(s.Z,{name:"92",isCorrect:"true",mdxType:"ExamCheckbox"},"`type counterReturn is list(operation) * counterStorage`"),(0,o.kt)(s.Z,{name:"93",isCorrect:"false",mdxType:"ExamCheckbox"},"`type counterReturn is counterStorage`"),(0,o.kt)(s.Z,{name:"94",isCorrect:"false",mdxType:"ExamCheckbox"},"`type counterReturn is counterEntrypoints`"),(0,o.kt)(s.Z,{name:"95",isCorrect:"true",mdxType:"ExamCheckbox"},"`type counterReturn is list(operation) * int`"),(0,o.kt)("p",null,"Which of the following proposals is called an entrypoint for this smart contract?"),(0,o.kt)(s.Z,{name:"100",isCorrect:"false",mdxType:"ExamCheckbox"},"`Increment(p)`"),(0,o.kt)(s.Z,{name:"101",isCorrect:"false",mdxType:"ExamCheckbox"},"`Increment(p) -> increment(p, store)`"),(0,o.kt)(s.Z,{name:"102",isCorrect:"false",mdxType:"ExamCheckbox"},"`indiceEntrypoints`"),(0,o.kt)(s.Z,{name:"103",isCorrect:"false",mdxType:"ExamCheckbox"},"`Decrement(p)`"),(0,o.kt)(s.Z,{name:"104",isCorrect:"false",mdxType:"ExamCheckbox"},"`Decrement(p) -> decrement(p, store)`"),(0,o.kt)(s.Z,{name:"105",isCorrect:"true",mdxType:"ExamCheckbox"},"`increment`"),(0,o.kt)(s.Z,{name:"106",isCorrect:"false",mdxType:"ExamCheckbox"},"`ret`"),(0,o.kt)(s.Z,{name:"107",isCorrect:"true",mdxType:"ExamCheckbox"},"`decrement`"),(0,o.kt)("p",null,"What command lines are correct for this smart contract?\n(Assume that the smart contract is stored in a file ",(0,o.kt)("strong",{parentName:"p"},"counter.ligo"),")"),(0,o.kt)(s.Z,{name:"110",isCorrect:"true",mdxType:"ExamCheckbox"},"ligo compile-contract counter.ligo main"),(0,o.kt)(s.Z,{name:"111",isCorrect:"false",mdxType:"ExamCheckbox"},"ligo compile-contract main counter.ligo"),(0,o.kt)(s.Z,{name:"112",isCorrect:"true",mdxType:"ExamCheckbox"},"ligo dry-run counter.ligo main 'Increment(5)' '4'"),(0,o.kt)(s.Z,{name:"113",isCorrect:"false",mdxType:"ExamCheckbox"},"ligo dry-run counter.ligo increment 'Increment(5)' '4'"),(0,o.kt)(s.Z,{name:"114",isCorrect:"true",mdxType:"ExamCheckbox"},"ligo compile-parameter counter.ligo main 'Decrement(5)'"),(0,o.kt)(s.Z,{name:"115",isCorrect:"false",mdxType:"ExamCheckbox"},"ligo compile-parameter counter.ligo decrement 'Decrement(5)'"),(0,o.kt)(s.Z,{name:"116",isCorrect:"false",mdxType:"ExamCheckbox"},"ligo compile-parameter counter.ligo main 'decrement' '5'"),(0,o.kt)(s.Z,{name:"117",isCorrect:"false",mdxType:"ExamCheckbox"},"ligo compile-parameter counter.ligo main '0'"),(0,o.kt)(s.Z,{name:"118",isCorrect:"true",mdxType:"ExamCheckbox"},"ligo compile-storage counter.ligo main '0'"),(0,o.kt)(s.Z,{name:"119",isCorrect:"false",mdxType:"ExamCheckbox"},"ligo compile-storage counter.ligo main 'counterStorage(0)'")))}p.isMDXComponent=!0},1695:function(e){function t(e){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}t.keys=function(){return[]},t.resolve=t,t.id=1695,e.exports=t}}]);